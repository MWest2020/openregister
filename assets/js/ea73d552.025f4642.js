"use strict";(self.webpackChunkopen_register_docs=self.webpackChunkopen_register_docs||[]).push([[687],{3035:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>g});var n=a(8168),i=(a(6540),a(5680));const l={},r="File Attachments",s={unversionedId:"Features/file-attachments",id:"Features/file-attachments",title:"File Attachments",description:"File Attachments allow objects to include and manage associated files and documents. Open Register leverages Nextcloud's powerful file storage capabilities to provide a robust and secure file management system. By building on top of Nextcloud's proven infrastructure, Open Register inherits all the benefits of Nextcloud's file handling including:",source:"@site/docs/Features/file-attachments.md",sourceDirName:"Features",slug:"/Features/file-attachments",permalink:"/docs/Features/file-attachments",draft:!1,editUrl:"https://github.com/conductionnl/openregister/tree/main/website/docs/Features/file-attachments.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events Documentation",permalink:"/docs/Features/events"},next:{title:"Object Metadata",permalink:"/docs/Features/metadata"}},o={},g=[{value:"Overview",id:"overview",level:2},{value:"File Object Structure",id:"file-object-structure",level:2},{value:"Attaching Files to Objects",id:"attaching-files-to-objects",level:2},{value:"File Metadata and Tagging",id:"file-metadata-and-tagging",level:2},{value:"Tagging System",id:"tagging-system",level:3},{value:"Version Control",id:"version-control",level:2},{value:"Security and Access Control",id:"security-and-access-control",level:2},{value:"File Operations",id:"file-operations",level:2},{value:"File Preview and Rendering",id:"file-preview-and-rendering",level:2},{value:"Integration with Object Lifecycle",id:"integration-with-object-lifecycle",level:2},{value:"Technical Implementation",id:"technical-implementation",level:2},{value:"Related Features",id:"related-features",level:2}],c={toc:g},d="wrapper";function u(e){let{components:t,...a}=e;return(0,i.yg)(d,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"file-attachments"},"File Attachments"),(0,i.yg)("p",null,"File Attachments allow objects to include and manage associated files and documents. Open Register leverages Nextcloud's powerful file storage capabilities to provide a robust and secure file management system. By building on top of Nextcloud's proven infrastructure, Open Register inherits all the benefits of Nextcloud's file handling including:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Secure file storage and encryption"),(0,i.yg)("li",{parentName:"ul"},"File versioning and history"),(0,i.yg)("li",{parentName:"ul"},"Collaborative features like sharing and commenting"),(0,i.yg)("li",{parentName:"ul"},"Preview generation for supported file types"),(0,i.yg)("li",{parentName:"ul"},"Automated virus scanning"),(0,i.yg)("li",{parentName:"ul"},"Flexible storage backend support")),(0,i.yg)("h2",{id:"overview"},"Overview"),(0,i.yg)("p",null,"When a register is created in Open Register, a share is also automatically created in Nextcloud. Then when a schema is created, a folder is created within that share, and when an object is created, a folder is created (using the UUID of the object) in the folder of the schema. This means that every object has a corresponding folder. Files present in that folder are assumed to be attached to the object. This gives a simple and intuitive system of coupling files to objects."),(0,i.yg)("p",null,"Alternatively, users can also relate (existing) files to an object by using the Nextcloud file system and tagging the file 'object:","[uuid]","' where '","[uuid]","' is the UUID of the object. In neither case is there a relation between the file and a property in the object. The files are however available through the object API because file objects are returned in the object metadata under the files array."),(0,i.yg)("h2",{id:"file-object-structure"},"File Object Structure"),(0,i.yg)("p",null,"The file object contains the following properties:"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Property"),(0,i.yg)("th",{parentName:"tr",align:null},"Type"),(0,i.yg)("th",{parentName:"tr",align:null},"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"id"),(0,i.yg)("td",{parentName:"tr",align:null},"integer"),(0,i.yg)("td",{parentName:"tr",align:null},"Unique identifier of the file in Nextcloud")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"path"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"Full path to the file in Nextcloud")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"title"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"Name of the file")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"accessUrl"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"URL to access the file via share link")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"downloadUrl"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"Direct download URL for the file")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"type"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"MIME type of the file")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"extension"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"File extension")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"size"),(0,i.yg)("td",{parentName:"tr",align:null},"integer"),(0,i.yg)("td",{parentName:"tr",align:null},"File size in bytes")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"hash"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"ETag hash for file versioning")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"published"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"ISO 8601 timestamp when file was first shared")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"modified"),(0,i.yg)("td",{parentName:"tr",align:null},"string"),(0,i.yg)("td",{parentName:"tr",align:null},"ISO 8601 timestamp of last modification")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"labels"),(0,i.yg)("td",{parentName:"tr",align:null},"array"),(0,i.yg)("td",{parentName:"tr",align:null},"Array of tags and key-value pairs")))),(0,i.yg)("p",null,"This hierarchical organization ensures files are properly categorized and easily accessible."),(0,i.yg)("h2",{id:"attaching-files-to-objects"},"Attaching Files to Objects"),(0,i.yg)("p",null,"Files can be attached to objects in several ways:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Schema-defined file properties: When a schema includes properties of type 'file', these are automatically handled during object creation or updates"),(0,i.yg)("li",{parentName:"ol"},"Direct API attachment: Files can be added to an object after creation using the file attachment API endpoints"),(0,i.yg)("li",{parentName:"ol"},"Base64 encoded content: Files can be included in object data as base64-encoded strings"),(0,i.yg)("li",{parentName:"ol"},"URL references: External files can be referenced by URL and will be downloaded and stored locally")),(0,i.yg)("h2",{id:"file-metadata-and-tagging"},"File Metadata and Tagging"),(0,i.yg)("p",null,"Each file attachment includes rich metadata:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Basic properties (name, size, type, extension)"),(0,i.yg)("li",{parentName:"ul"},"Creation and modification timestamps"),(0,i.yg)("li",{parentName:"ul"},"Access and download URLs"),(0,i.yg)("li",{parentName:"ul"},"Checksum for integrity verification"),(0,i.yg)("li",{parentName:"ul"},"Custom tags for categorization")),(0,i.yg)("h3",{id:"tagging-system"},"Tagging System"),(0,i.yg)("p",null,"Files can be tagged with both simple labels and key-value pairs:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Tags with a colon (':') are treated as key-value pairs and can be used for advanced filtering and organization")),(0,i.yg)("h2",{id:"version-control"},"Version Control"),(0,i.yg)("p",null,"The system maintains file versions by:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Tracking file modifications with timestamps"),(0,i.yg)("li",{parentName:"ul"},"Preserving checksums to detect changes"),(0,i.yg)("li",{parentName:"ul"},"Integrating with the object audit trail system"),(0,i.yg)("li",{parentName:"ul"},"Supporting file restoration from previous versions")),(0,i.yg)("h2",{id:"security-and-access-control"},"Security and Access Control"),(0,i.yg)("p",null,"File attachments inherit the security model of their parent objects:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Files are stored in NextCloud with appropriate permissions"),(0,i.yg)("li",{parentName:"ul"},"Share links can be generated for controlled external access"),(0,i.yg)("li",{parentName:"ul"},"Access is managed through the OpenRegister user and group system"),(0,i.yg)("li",{parentName:"ul"},"Files are associated with the OpenRegister application user for consistent permissions")),(0,i.yg)("h2",{id:"file-operations"},"File Operations"),(0,i.yg)("p",null,"The system supports the following operations on file attachments:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Retrieving Files"),(0,i.yg)("li",{parentName:"ul"},"Updating Files"),(0,i.yg)("li",{parentName:"ul"},"Deleting Files")),(0,i.yg)("h2",{id:"file-preview-and-rendering"},"File Preview and Rendering"),(0,i.yg)("p",null,"The system leverages NextCloud's preview capabilities for supported file types:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Images are displayed as thumbnails"),(0,i.yg)("li",{parentName:"ul"},"PDFs can be previewed in-browser"),(0,i.yg)("li",{parentName:"ul"},"Office documents can be viewed with compatible apps"),(0,i.yg)("li",{parentName:"ul"},"Preview URLs are generated for easy embedding")),(0,i.yg)("h2",{id:"integration-with-object-lifecycle"},"Integration with Object Lifecycle"),(0,i.yg)("p",null,"File attachments are fully integrated with the object lifecycle:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"When objects are created, their file folders are automatically provisioned"),(0,i.yg)("li",{parentName:"ul"},"When objects are updated, file references are maintained"),(0,i.yg)("li",{parentName:"ul"},"When objects are deleted, associated files can be optionally preserved or removed"),(0,i.yg)("li",{parentName:"ul"},"File operations are recorded in the object's audit trail")),(0,i.yg)("h2",{id:"technical-implementation"},"Technical Implementation"),(0,i.yg)("p",null,"The file attachment system is implemented through two main service classes:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"FileService: Handles low-level file operations, folder management, and NextCloud integration"),(0,i.yg)("li",{parentName:"ul"},"ObjectService: Provides high-level methods for attaching, retrieving, and managing files in the context of objects")),(0,i.yg)("p",null,"These services work together to provide a seamless file management experience within the OpenRegister application."),(0,i.yg)("h2",{id:"related-features"},"Related Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/Features/content-search"},"Content Search")," - Search file contents"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/Features/object-relations"},"Object Relations")," - Link files to objects"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/Features/audit-trails"},"Audit Trail")," - Track file changes over time")))}u.isMDXComponent=!0},5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var n=a(6540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),g=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=g(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=g(a),p=i,y=d["".concat(o,".").concat(p)]||d[p]||u[p]||l;return a?n.createElement(y,r(r({ref:t},c),{},{components:a})):n.createElement(y,r({ref:t},c))}));function y(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=p;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var g=2;g<l;g++)r[g]=a[g];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);
"use strict";(self.webpackChunkopen_catalogi_docs=self.webpackChunkopen_catalogi_docs||[]).push([[9253],{2842:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Features/data-extension","title":"Data Extension (_extend)","description":"Data Extension allows you to automatically include related entities in API responses, reducing the need for multiple API calls and providing complete context in a single request. This is useful when you need to retrieve related data for a specific object or collection an lowers the number of API calls needed therby reducing the load on the server and improving performence client side.","source":"@site/docs/Features/data-extension.md","sourceDirName":"Features","slug":"/Features/data-extension","permalink":"/docs/Features/data-extension","draft":false,"unlisted":false,"editUrl":"https://github.com/conductionnl/openregister/tree/main/website/docs/Features/data-extension.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Content Search","permalink":"/docs/Features/content-search"},"next":{"title":"Data Filtering (_filter)","permalink":"/docs/Features/data-filtering"}}');var r=i(4848),l=i(8453);const t={},d="Data Extension (_extend)",c={},o=[{value:"Overview",id:"overview",level:2},{value:"Extension Patterns",id:"extension-patterns",level:2},{value:"Basic Extension",id:"basic-extension",level:3},{value:"Nested Extension",id:"nested-extension",level:3},{value:"Multiple Extensions",id:"multiple-extensions",level:3},{value:"Extension Logic",id:"extension-logic",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Related Features",id:"related-features",level:2},{value:"Extension Types",id:"extension-types",level:2},{value:"Direct Relations",id:"direct-relations",level:3},{value:"Nested Relations",id:"nested-relations",level:3},{value:"Reference Types",id:"reference-types",level:3},{value:"Key Benefits",id:"key-benefits",level:2},{value:"Integration with Privacy",id:"integration-with-privacy",level:2},{value:"Using the objects api",id:"using-the-objects-api",level:2},{value:"Single Object Extension",id:"single-object-extension",level:3},{value:"Collection Extension",id:"collection-extension",level:3},{value:"Extending Multiple Properties",id:"extending-multiple-properties",level:3},{value:"Extending Nested Properties",id:"extending-nested-properties",level:3},{value:"Using the object service",id:"using-the-object-service",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"data-extension-_extend",children:"Data Extension (_extend)"})}),"\n",(0,r.jsx)(n.p,{children:"Data Extension allows you to automatically include related entities in API responses, reducing the need for multiple API calls and providing complete context in a single request. This is useful when you need to retrieve related data for a specific object or collection an lowers the number of API calls needed therby reducing the load on the server and improving performence client side."}),"\n",(0,r.jsxs)(n.p,{children:["The extend patern is based was orginally developed for the ",(0,r.jsx)(n.a,{href:"https://opencatalogi.org",children:"Open Catalogi"})," project and is now available in the ObjectStore API. Its baed on the extend functionality of ",(0,r.jsx)(n.a,{href:"https://github.com/VNG-Realisatie/gemma-zaken",children:"Zaak gericht werken"})," but brought in line with p",(0,r.jsx)(n.a,{href:"https://logius-standaarden.github.io/API-Design-Rules/",children:"NLGov REST API Design Rules"})," by adding a _ prefix to the parameter"]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The extension system provides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatic inclusion of related objects"}),"\n",(0,r.jsx)(n.li,{children:"Nested object resolution"}),"\n",(0,r.jsx)(n.li,{children:"Circular reference protection"}),"\n",(0,r.jsx)(n.li,{children:"Depth limiting"}),"\n",(0,r.jsx)(n.li,{children:"Performance optimization"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"extension-patterns",children:"Extension Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"basic-extension",children:"Basic Extension"}),"\n",(0,r.jsx)(n.p,{children:"Extend a single property:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=author"})," - Include full author object"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=category"})," - Include full category object"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=files"})," - Include file metadata"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nested-extension",children:"Nested Extension"}),"\n",(0,r.jsx)(n.p,{children:"Extend nested properties:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=author.organization"})," - Include author with their organization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=department.employees"})," - Include department with all employees"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=project.tasks.assignee"})," - Include project with tasks and their assignees"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"multiple-extensions",children:"Multiple Extensions"}),"\n",(0,r.jsx)(n.p,{children:"Combine multiple extensions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=author,category,comments"})," - Include multiple related objects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=files,metadata,relations"})," - Include all related data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"?_extend=all"})," - Include all possible relations on the root object"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"extension-logic",children:"Extension Logic"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Depth Control"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maximum depth of 3 levels"}),"\n",(0,r.jsx)(n.li,{children:"Prevents infinite recursion"}),"\n",(0,r.jsx)(n.li,{children:"Optimizes response size"}),"\n",(0,r.jsx)(n.li,{children:"Manages performance"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Circular Detection"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Identifies circular references"}),"\n",(0,r.jsx)(n.li,{children:"Prevents infinite loops"}),"\n",(0,r.jsx)(n.li,{children:"Maintains data integrity"}),"\n",(0,r.jsx)(n.li,{children:"Optimizes response"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Type Handling"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single object relations"}),"\n",(0,r.jsx)(n.li,{children:"Array of objects"}),"\n",(0,r.jsx)(n.li,{children:"File references"}),"\n",(0,r.jsx)(n.li,{children:"External references"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Query Optimization"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Efficient database queries"}),"\n",(0,r.jsx)(n.li,{children:"Batch loading"}),"\n",(0,r.jsx)(n.li,{children:"Cache utilization"}),"\n",(0,r.jsx)(n.li,{children:"Resource management"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Response Size"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Selective extension"}),"\n",(0,r.jsx)(n.li,{children:"Depth limiting"}),"\n",(0,r.jsx)(n.li,{children:"Data filtering"}),"\n",(0,r.jsx)(n.li,{children:"Compression"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Caching"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Response caching"}),"\n",(0,r.jsx)(n.li,{children:"Relation caching"}),"\n",(0,r.jsx)(n.li,{children:"Cache invalidation"}),"\n",(0,r.jsx)(n.li,{children:"Cache optimization"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Extension Selection"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Request only needed relations"}),"\n",(0,r.jsx)(n.li,{children:"Consider response size"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate depth"}),"\n",(0,r.jsx)(n.li,{children:"Plan for performance"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Query Design"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use specific extensions"}),"\n",(0,r.jsx)(n.li,{children:"Combine related requests"}),"\n",(0,r.jsx)(n.li,{children:"Optimize query patterns"}),"\n",(0,r.jsx)(n.li,{children:"Consider caching"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Handle missing relations"}),"\n",(0,r.jsx)(n.li,{children:"Validate extension paths"}),"\n",(0,r.jsx)(n.li,{children:"Manage timeouts"}),"\n",(0,r.jsx)(n.li,{children:"Provide fallbacks"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-features",children:"Related Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/Features/object-relations",children:"Object Relations"})," - Base for extensions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/Features/content-search",children:"Content Search"})," - Search within extended data"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"extension-types",children:"Extension Types"}),"\n",(0,r.jsx)(n.h3,{id:"direct-relations",children:"Direct Relations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single object relations"}),"\n",(0,r.jsx)(n.li,{children:"Collection relations"}),"\n",(0,r.jsx)(n.li,{children:"External references"}),"\n",(0,r.jsx)(n.li,{children:"URI resolutions"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nested-relations",children:"Nested Relations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-level extensions"}),"\n",(0,r.jsx)(n.li,{children:"Depth control"}),"\n",(0,r.jsx)(n.li,{children:"Circular detection"}),"\n",(0,r.jsx)(n.li,{children:"Performance optimization"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"reference-types",children:"Reference Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Internal IDs"}),"\n",(0,r.jsx)(n.li,{children:"External URLs"}),"\n",(0,r.jsx)(n.li,{children:"URNs"}),"\n",(0,r.jsx)(n.li,{children:"Custom identifiers"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reduce API calls"}),"\n",(0,r.jsx)(n.li,{children:"Optimize data retrieval"}),"\n",(0,r.jsx)(n.li,{children:"Efficient response handling"}),"\n",(0,r.jsx)(n.li,{children:"Bandwidth optimization"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Data Completeness"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Get full context"}),"\n",(0,r.jsx)(n.li,{children:"Include related data"}),"\n",(0,r.jsx)(n.li,{children:"Resolve references"}),"\n",(0,r.jsx)(n.li,{children:"Complete object graphs"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Flexibility"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Client-driven inclusion"}),"\n",(0,r.jsx)(n.li,{children:"Dynamic data loading"}),"\n",(0,r.jsx)(n.li,{children:"Customizable depth"}),"\n",(0,r.jsx)(n.li,{children:"Selective extension"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-privacy",children:"Integration with Privacy"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Respects access controls on related objects"}),"\n",(0,r.jsx)(n.li,{children:"Honors data minimalization principles"}),"\n",(0,r.jsx)(n.li,{children:"Supports GDPR compliance"}),"\n",(0,r.jsx)(n.li,{children:"Provides audit trail integration"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"using-the-objects-api",children:"Using the objects api"}),"\n",(0,r.jsx)(n.h3,{id:"single-object-extension",children:"Single Object Extension"}),"\n",(0,r.jsx)(n.p,{children:"Consider a Dog object with a reference to its Breed:"}),"\n",(0,r.jsx)(n.p,{children:"Request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /api/dogs/123\n"})}),"\n",(0,r.jsx)(n.p,{children:"Response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "id": "550e8400-e29b-41d4-a716-446655440000",\n    "name": "Max",\n    "breed": "https://api.petstore.com/breeds/german-shepherd",\n    "age": 5\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"With data extension enabled:"}),"\n",(0,r.jsx)(n.p,{children:"Request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /api/dogs/123?extend=breed\n"})}),"\n",(0,r.jsx)(n.p,{children:"Response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "id": "550e8400-e29b-41d4-a716-446655440000",\n    "name": "Max",\n    "breed": {\n        "id": "german-shepherd",\n        "name": "German Shepherd",\n        "origin": "Germany",\n        "size": "Large"\n    },\n    "age": 5\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"collection-extension",children:"Collection Extension"}),"\n",(0,r.jsx)(n.p,{children:"The same principle works when retrieving collections:"}),"\n",(0,r.jsx)(n.p,{children:"Request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /api/dogs?extend=breed\n"})}),"\n",(0,r.jsx)(n.p,{children:"Response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "results": [\n        {\n            "id": "550e8400-e29b-41d4-a716-446655440000",\n            "name": "Max",\n            "breed": {\n                "id": "german-shepherd",\n                "name": "German Shepherd",\n                "origin": "Germany",\n                "size": "Large"\n            },\n            "age": 5\n        },\n        {\n            "id": "550e8400-e29b-41d4-a716-446655440001",\n            "name": "Bella",\n            "breed": {\n                "id": "golden-retriever",\n                "name": "Golden Retriever",\n                "origin": "Scotland",\n                "size": "Large"\n            },\n            "age": 3\n        }\n    ],\n    "total": 2\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"extending-multiple-properties",children:"Extending Multiple Properties"}),"\n",(0,r.jsx)(n.p,{children:"You can extend multiple properties in two ways:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Using a comma-separated list:"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Request:\n",(0,r.jsx)(n.code,{children:"GET /api/dogs?extend=breed,owner"})]}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Using an array format:"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Request:\n",(0,r.jsx)(n.code,{children:"GET /api/dogs?extend[]=breed&extend[]=owner"})]}),"\n",(0,r.jsx)(n.p,{children:"Both approaches will produce the same result, extending multiple properties in a single request."}),"\n",(0,r.jsx)(n.h3,{id:"extending-nested-properties",children:"Extending Nested Properties"}),"\n",(0,r.jsx)(n.p,{children:"You can extend properties of already extended objects using dot notation. This allows you to access nested data structures."}),"\n",(0,r.jsx)(n.p,{children:"For example, to extend the breed's parent breed information:"}),"\n",(0,r.jsxs)(n.p,{children:["Request:\n",(0,r.jsx)(n.code,{children:"GET /api/dogs?extend=breed.parent_breed"})]}),"\n",(0,r.jsx)(n.p,{children:"Response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "results": [\n        {\n            "id": "550e8400-e29b-41d4-a716-446655440000",\n            "name": "Max",\n            "breed": {\n                "id": "german-shepherd",\n                "name": "German Shepherd",\n                "origin": "Germany",\n                "size": "Large",\n                "parent_breed": {\n                    "id": "herding-dog",\n                    "name": "Herding Dog",\n                    "category": "Working Dog"\n                }\n            },\n            "age": 5\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"You can combine nested property extension with multiple property extension:"}),"\n",(0,r.jsxs)(n.p,{children:["Using comma separation:\n",(0,r.jsx)(n.code,{children:"GET /api/dogs?extend=breed.parent_breed,owner.address"})]}),"\n",(0,r.jsxs)(n.p,{children:["Using array notation:\n",(0,r.jsx)(n.code,{children:"GET /api/dogs?extend[]=breed.parent_breed&extend[]=owner.address"})]}),"\n",(0,r.jsxs)(n.p,{children:["Or combining both approaches:\n",(0,r.jsx)(n.code,{children:"GET /api/dogs?extend[]=breed.parent_breed,owner.contact&extend=owner.address"})]}),"\n",(0,r.jsx)(n.p,{children:"This gives you powerful flexibility to fetch exactly the nested data you need in a single request."}),"\n",(0,r.jsx)(n.h3,{id:"using-the-object-service",children:"Using the object service"}),"\n",(0,r.jsx)(n.p,{children:"The ObjectService provides a PHP interface to use data extension programmatically:"}),"\n",(0,r.jsx)(n.p,{children:"// Extend a single property"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$dogs = $objectService->find('dogs', ['extend' => 'breed']);\n"})}),"\n",(0,r.jsx)(n.p,{children:"// Extend multiple properties using array"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$dogs = $objectService->find('dogs', [\n    'extend' => ['breed', 'owner']\n]);\n"})}),"\n",(0,r.jsx)(n.p,{children:"// Extend nested properties"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$dogs = $objectService->find('dogs', [\n    'extend' => ['breed.parent_breed', 'owner.address']\n]);\n"})}),"\n",(0,r.jsx)(n.p,{children:"// Combine with other query parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$dogs = $objectService->find('dogs', [\n    'extend' => ['breed', 'owner'],\n    'filter' => ['age' => 5],\n    'limit' => 10\n]);\n\n\n## Related Features\n\n- [Object Relations](object-relations.md) - Base functionality for relations\n- [Data Filtering](data-filtering.md) - Combine with filtering for precise data selection\n- [Access Control](access-control.md) - Security for extended data \n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var s=i(6540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);
(self.webpackChunkopen_catalogi_docs=self.webpackChunkopen_catalogi_docs||[]).push([[7097],{2441:()=>{},3290:()=>{},5537:(e,r,s)=>{"use strict";s.d(r,{A:()=>R});var t=s(6540),n=s(8215),i=s(5627),a=s(6347),o=s(372),c=s(604),l=s(1861),d=s(8749);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:s}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return u(e).map((e=>{let{props:{value:r,label:s,attributes:t,default:n}}=e;return{value:r,label:s,attributes:t,default:n}}))}(s);return function(e){const r=(0,l.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,s])}function p(e){let{value:r,tabValues:s}=e;return s.some((e=>e.value===r))}function g(e){let{queryString:r=!1,groupId:s}=e;const n=(0,a.W6)(),i=function(e){let{queryString:r=!1,groupId:s}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:r,groupId:s});return[(0,c.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const r=new URLSearchParams(n.location.search);r.set(i,e),n.replace({...n.location,search:r.toString()})}),[i,n])]}function m(e){const{defaultValue:r,queryString:s=!1,groupId:n}=e,i=h(e),[a,c]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:i}))),[l,u]=g({queryString:s,groupId:n}),[m,x]=function(e){let{groupId:r}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,i]=(0,d.Dv)(s);return[n,(0,t.useCallback)((e=>{s&&i.set(e)}),[s,i])]}({groupId:n}),f=(()=>{const e=l??m;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{f&&c(f)}),[f]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),x(e)}),[u,x,i]),tabValues:i}}var x=s(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=s(4848);function b(e){let{className:r,block:s,selectedValue:t,selectValue:a,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),d=e=>{const r=e.currentTarget,s=c.indexOf(r),n=o[s].value;n!==t&&(l(r),a(n))},u=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=c.indexOf(e.currentTarget)+1;r=c[s]??c[0];break}case"ArrowLeft":{const s=c.indexOf(e.currentTarget)-1;r=c[s]??c[c.length-1];break}}r?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":s},r),children:o.map((e=>{let{value:r,label:s,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>{c.push(e)},onKeyDown:u,onClick:d,...i,className:(0,n.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":t===r}),children:s??r},r)}))})}function v(e){let{lazy:r,children:s,selectedValue:i}=e;const a=(Array.isArray(s)?s:[s]).filter(Boolean);if(r){const e=a.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==i})))})}function y(e){const r=m(e);return(0,j.jsxs)("div",{className:(0,n.A)("tabs-container",f.tabList),children:[(0,j.jsx)(b,{...r,...e}),(0,j.jsx)(v,{...r,...e})]})}function R(e){const r=(0,x.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(r))}},5673:(e,r,s)=>{"use strict";var t=s(6540),n=s(53),i=s(4404),a=(s(4345),s(8794)),o=s(4022),c=s(2077);function l(e){const r=(0,c.kh)("docusaurus-plugin-redoc");return e?r?.[e]:Object.values(r??{})?.[0]}var d=s(4848);const u=e=>{let{id:r,example:s,pointer:c,...u}=e;const h=l(r),{store:p}=(0,o.r)(h);return(0,t.useEffect)((()=>{p.menu.dispose()}),[p]),(0,d.jsx)(i.ThemeProvider,{theme:p.options.theme,children:(0,d.jsx)("div",{className:(0,n.A)(["redocusaurus","redocusaurus-schema",s?null:"hide-example"]),children:(0,d.jsx)(a.SchemaDefinition,{parser:p.spec.parser,options:p.options,schemaRef:c,...u})})})};u.defaultProps={example:!1}},7389:(e,r,s)=>{"use strict";s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Core/registers","title":"Registers","description":"What is a Register?","source":"@site/docs/Core/registers.md","sourceDirName":"Core","slug":"/Core/registers","permalink":"/docs/Core/registers","draft":false,"unlisted":false,"editUrl":"https://github.com/conductionnl/openregister/tree/main/website/docs/Core/registers.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Registers","sidebar_position":2},"sidebar":"tutorialSidebar","next":{"title":"Schemas","permalink":"/docs/Core/schemas"}}');var n=s(4848),i=s(8453);s(5673),s(5537),s(9329);const a={title:"Registers",sidebar_position:2},o="Registers",c={},l=[{value:"What is a Register?",id:"what-is-a-register",level:2},{value:"Register Structure",id:"register-structure",level:2},{value:"Example Register",id:"example-register",level:2},{value:"Register Use Cases",id:"register-use-cases",level:2},{value:"1. Master Data Management",id:"1-master-data-management",level:3},{value:"2. Domain-Specific Data Collections",id:"2-domain-specific-data-collections",level:3},{value:"3. Integration Hubs",id:"3-integration-hubs",level:3},{value:"Working with Registers",id:"working-with-registers",level:2},{value:"Creating a Register",id:"creating-a-register",level:3},{value:"Retrieving Register Information",id:"retrieving-register-information",level:3},{value:"Updating a Register",id:"updating-a-register",level:3},{value:"Deleting a Register",id:"deleting-a-register",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Relationship to Other Concepts",id:"relationship-to-other-concepts",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"registers",children:"Registers"})}),"\n",(0,n.jsx)(r.h2,{id:"what-is-a-register",children:"What is a Register?"}),"\n",(0,n.jsxs)(r.p,{children:["In Open Register, a ",(0,n.jsx)(r.strong,{children:"Register"})," is a specialized container that holds objects conforming to specific schemas. You can think of a register as:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["A ",(0,n.jsx)(r.strong,{children:"collection"})," of related data objects"]}),"\n",(0,n.jsxs)(r.li,{children:["A ",(0,n.jsx)(r.strong,{children:"domain-specific database"})," focused on a particular subject area"]}),"\n",(0,n.jsxs)(r.li,{children:["A ",(0,n.jsx)(r.strong,{children:"logical grouping"})," of information with common validation rules"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Registers provide a way to organize data by purpose, domain, or function, making it easier to manage and retrieve related information."}),"\n",(0,n.jsx)(r.h2,{id:"register-structure",children:"Register Structure"}),"\n",(0,n.jsx)(r.p,{children:"A register consists of the following key components:"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Property"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"id"})}),(0,n.jsx)(r.td,{children:"Unique identifier for the register"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"title"})}),(0,n.jsx)(r.td,{children:"Human-readable name of the register"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"description"})}),(0,n.jsx)(r.td,{children:"Detailed explanation of the register's purpose"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"schemas"})}),(0,n.jsx)(r.td,{children:"Array of schema IDs that this register supports"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"source"})}),(0,n.jsx)(r.td,{children:"The data source identifier for storage"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"databaseId"})}),(0,n.jsx)(r.td,{children:"Database identifier where register data is stored"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"tablePrefix"})}),(0,n.jsx)(r.td,{children:"Prefix for database tables used by this register"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"updated"})}),(0,n.jsx)(r.td,{children:"Timestamp of last update"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"created"})}),(0,n.jsx)(r.td,{children:"Timestamp of creation"})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"example-register",children:"Example Register"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'{\n  "id": "person-register",\n  "title": "Person Register",\n  "description": "Central register for person data across the organization",\n  "schemas": ["person", "address", "contact-details"],\n  "source": "primary-source",\n  "databaseId": "main-db",\n  "tablePrefix": "person_",\n  "updated": "2023-05-15T14:30:00Z",\n  "created": "2023-01-10T09:15:00Z"\n}\n'})}),"\n",(0,n.jsx)(r.h2,{id:"register-use-cases",children:"Register Use Cases"}),"\n",(0,n.jsx)(r.p,{children:"Registers can be used for various purposes:"}),"\n",(0,n.jsx)(r.h3,{id:"1-master-data-management",children:"1. Master Data Management"}),"\n",(0,n.jsx)(r.p,{children:"Create registers for core business entities like customers, products, or locations to ensure a single source of truth."}),"\n",(0,n.jsx)(r.h3,{id:"2-domain-specific-data-collections",children:"2. Domain-Specific Data Collections"}),"\n",(0,n.jsx)(r.p,{children:"Organize data by business domains such as:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"HR Register (employees, departments, positions)"}),"\n",(0,n.jsx)(r.li,{children:"Financial Register (accounts, transactions, budgets)"}),"\n",(0,n.jsx)(r.li,{children:"Product Register (products, categories, specifications)"}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"3-integration-hubs",children:"3. Integration Hubs"}),"\n",(0,n.jsx)(r.p,{children:"Use registers as integration points between different systems, providing a standardized way to exchange data."}),"\n",(0,n.jsx)(r.h2,{id:"working-with-registers",children:"Working with Registers"}),"\n",(0,n.jsx)(r.h3,{id:"creating-a-register",children:"Creating a Register"}),"\n",(0,n.jsx)(r.p,{children:"To create a new register, you need to define its basic properties and specify which schemas it will support:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'POST /api/registers\n{\n  "title": "Customer Register",\n  "description": "Central repository for customer information",\n  "schemas": ["customer", "address", "preference"],\n  "source": "primary-source",\n  "databaseId": "customer-db"\n}\n'})}),"\n",(0,n.jsx)(r.h3,{id:"retrieving-register-information",children:"Retrieving Register Information"}),"\n",(0,n.jsx)(r.p,{children:"You can retrieve information about a specific register:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"GET /api/registers/{id}\n"})}),"\n",(0,n.jsx)(r.p,{children:"Or list all available registers:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"GET /api/registers\n"})}),"\n",(0,n.jsx)(r.h3,{id:"updating-a-register",children:"Updating a Register"}),"\n",(0,n.jsx)(r.p,{children:"Registers can be updated to add or remove supported schemas or change other properties:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'PUT /api/registers/{id}\n{\n  "title": "Customer Register",\n  "description": "Updated repository for customer information",\n  "schemas": ["customer", "address", "preference", "communication-history"],\n  "source": "primary-source",\n  "databaseId": "customer-db"\n}\n'})}),"\n",(0,n.jsx)(r.h3,{id:"deleting-a-register",children:"Deleting a Register"}),"\n",(0,n.jsx)(r.p,{children:"Registers can be deleted when no longer needed:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"DELETE /api/registers/{id}\n"})}),"\n",(0,n.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Logical Grouping"}),": Create registers around logical domains or business functions"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Clear Naming"}),": Use clear, descriptive names for registers"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Documentation"}),": Provide detailed descriptions of each register's purpose"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Schema Selection"}),": Carefully select which schemas belong in each register"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Access Control"}),": Define appropriate access controls for each register"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"relationship-to-other-concepts",children:"Relationship to Other Concepts"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Schemas"}),": Registers specify which schemas they support, defining what types of objects can be stored"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Objects"}),": Objects are stored within registers and must conform to one of the register's supported schemas"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Sources"}),": Registers use sources to determine where and how their data is stored"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsx)(r.p,{children:"Registers are a fundamental organizing principle in Open Register, providing structure and context for your data. By grouping related schemas and objects into registers, you create a more manageable and intuitive data architecture that aligns with your business domains."})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},7411:()=>{},7992:()=>{},8453:(e,r,s)=>{"use strict";s.d(r,{R:()=>a,x:()=>o});var t=s(6540);const n={},i=t.createContext(n);function a(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(i.Provider,{value:r},e.children)}},8825:()=>{},9329:(e,r,s)=>{"use strict";s.d(r,{A:()=>a});s(6540);var t=s(8215);const n={tabItem:"tabItem_Ymn6"};var i=s(4848);function a(e){let{children:r,hidden:s,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(n.tabItem,a),hidden:s,children:r})}}}]);
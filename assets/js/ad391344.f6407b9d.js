"use strict";(self.webpackChunkopen_register_docs=self.webpackChunkopen_register_docs||[]).push([[768],{1657:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=t(8168),r=(t(6540),t(5680));const i={},l="Schema Import & Sharing",o={unversionedId:"schema-import",id:"schema-import",title:"Schema Import & Sharing",description:"Open Register provides powerful schema import capabilities, allowing organizations to leverage existing standards and share their own schemas through Open Catalogi.",source:"@site/docs/schema-import.md",sourceDirName:".",slug:"/schema-import",permalink:"/docs/schema-import",draft:!1,editUrl:"https://github.com/conductionnl/openregister/tree/main/website/docs/schema-import.md",tags:[],version:"current",frontMatter:{}},p={},m=[{value:"Overview",id:"overview",level:2},{value:"Import Sources",id:"import-sources",level:2},{value:"Schema.org",id:"schemaorg",level:3},{value:"OpenAPI Specification",id:"openapi-specification",level:3},{value:"Gemeentelijk Gegevensmodel (GGM)",id:"gemeentelijk-gegevensmodel-ggm",level:3},{value:"Open Catalogi",id:"open-catalogi",level:3},{value:"Schema Sharing",id:"schema-sharing",level:2},{value:"Key Benefits",id:"key-benefits",level:2},{value:"Related Features",id:"related-features",level:2}],s={toc:m},g="wrapper";function c(e){let{components:a,...t}=e;return(0,r.yg)(g,(0,n.A)({},s,t,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"schema-import--sharing"},"Schema Import & Sharing"),(0,r.yg)("p",null,"Open Register provides powerful schema import capabilities, allowing organizations to leverage existing standards and share their own schemas through Open Catalogi."),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("p",null,"The schema system supports importing from:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Schema.org definitions"),(0,r.yg)("li",{parentName:"ul"},"OpenAPI Specification (OAS) files"),(0,r.yg)("li",{parentName:"ul"},"Gemeentelijk Gegevensmodel (GGM)"),(0,r.yg)("li",{parentName:"ul"},"Open Catalogi"),(0,r.yg)("li",{parentName:"ul"},"Custom JSON Schema files")),(0,r.yg)("h2",{id:"import-sources"},"Import Sources"),(0,r.yg)("h3",{id:"schemaorg"},"Schema.org"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Import standard web vocabularies"),(0,r.yg)("li",{parentName:"ul"},"Use established data structures"),(0,r.yg)("li",{parentName:"ul"},"Benefit from widespread adoption"),(0,r.yg)("li",{parentName:"ul"},"Maintain semantic compatibility")),(0,r.yg)("h3",{id:"openapi-specification"},"OpenAPI Specification"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Import API definitions"),(0,r.yg)("li",{parentName:"ul"},"Reuse existing data models"),(0,r.yg)("li",{parentName:"ul"},"Maintain API compatibility"),(0,r.yg)("li",{parentName:"ul"},"Leverage API documentation")),(0,r.yg)("h3",{id:"gemeentelijk-gegevensmodel-ggm"},"Gemeentelijk Gegevensmodel (GGM)"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Import Dutch municipal data models"),(0,r.yg)("li",{parentName:"ul"},"Comply with government standards"),(0,r.yg)("li",{parentName:"ul"},"Ensure data compatibility"),(0,r.yg)("li",{parentName:"ul"},"Support Common Ground principles")),(0,r.yg)("h3",{id:"open-catalogi"},"Open Catalogi"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Share schemas between organizations"),(0,r.yg)("li",{parentName:"ul"},"Import from central repositories"),(0,r.yg)("li",{parentName:"ul"},"Collaborate on definitions"),(0,r.yg)("li",{parentName:"ul"},"Version control schemas")),(0,r.yg)("h2",{id:"schema-sharing"},"Schema Sharing"),(0,r.yg)("p",null,"Organizations can share their schemas through Open Catalogi:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Publish schemas publicly"),(0,r.yg)("li",{parentName:"ul"},"Version control"),(0,r.yg)("li",{parentName:"ul"},"Collaborative development"),(0,r.yg)("li",{parentName:"ul"},"Change management"),(0,r.yg)("li",{parentName:"ul"},"Documentation"),(0,r.yg)("li",{parentName:"ul"},"Usage statistics")),(0,r.yg)("h2",{id:"key-benefits"},"Key Benefits"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Standardization")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Reuse existing standards"),(0,r.yg)("li",{parentName:"ul"},"Ensure compatibility"),(0,r.yg)("li",{parentName:"ul"},"Reduce development time"),(0,r.yg)("li",{parentName:"ul"},"Share best practices"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Collaboration")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Share schemas"),(0,r.yg)("li",{parentName:"ul"},"Collaborate on definitions"),(0,r.yg)("li",{parentName:"ul"},"Build on existing work"),(0,r.yg)("li",{parentName:"ul"},"Community involvement"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Maintenance")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Central updates"),(0,r.yg)("li",{parentName:"ul"},"Version management"),(0,r.yg)("li",{parentName:"ul"},"Change tracking"),(0,r.yg)("li",{parentName:"ul"},"Documentation")))),(0,r.yg)("h2",{id:"related-features"},"Related Features"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/schema-validation"},"Schema Validation")," - Validate against imported schemas"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/register-management"},"Register Management")," - Use schemas in registers"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/object-storage"},"Object Storage")," - Store objects according to schemas")))}c.isMDXComponent=!0},5680:(e,a,t)=>{t.d(a,{xA:()=>s,yg:()=>y});var n=t(6540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),m=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},s=function(e){var a=m(e.components);return n.createElement(p.Provider,{value:a},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),g=m(t),u=r,y=g["".concat(p,".").concat(u)]||g[u]||c[u]||i;return t?n.createElement(y,l(l({ref:a},s),{},{components:t})):n.createElement(y,l({ref:a},s))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[g]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=t[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);
"use strict";(self.webpackChunkopen_catalogi_docs=self.webpackChunkopen_catalogi_docs||[]).push([[3687],{8453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>a});var n=t(6540);const s={},l=n.createContext(s);function r(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(l.Provider,{value:i},e.children)}},9578:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Features/file-attachments","title":"File Attachments","description":"File Attachments allow objects to include and manage associated files and documents. Open Register leverages Nextcloud\'s powerful file storage capabilities to provide a robust and secure file management system. By building on top of Nextcloud\'s proven infrastructure, Open Register inherits all the benefits of Nextcloud\'s file handling including:","source":"@site/docs/Features/file-attachments.md","sourceDirName":"Features","slug":"/Features/file-attachments","permalink":"/docs/Features/file-attachments","draft":false,"unlisted":false,"editUrl":"https://github.com/conductionnl/openregister/tree/main/website/docs/Features/file-attachments.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Events Documentation","permalink":"/docs/Features/events"},"next":{"title":"Object Metadata","permalink":"/docs/Features/metadata"}}');var s=t(4848),l=t(8453);const r={},a="File Attachments",d={},c=[{value:"Overview",id:"overview",level:2},{value:"File Object Structure",id:"file-object-structure",level:2},{value:"Attaching Files to Objects",id:"attaching-files-to-objects",level:2},{value:"File Metadata and Tagging",id:"file-metadata-and-tagging",level:2},{value:"Tagging System",id:"tagging-system",level:3},{value:"Version Control",id:"version-control",level:2},{value:"Security and Access Control",id:"security-and-access-control",level:2},{value:"File Operations",id:"file-operations",level:2},{value:"File Preview and Rendering",id:"file-preview-and-rendering",level:2},{value:"Integration with Object Lifecycle",id:"integration-with-object-lifecycle",level:2},{value:"Technical Implementation",id:"technical-implementation",level:2}];function o(e){const i={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"file-attachments",children:"File Attachments"})}),"\n",(0,s.jsx)(i.p,{children:"File Attachments allow objects to include and manage associated files and documents. Open Register leverages Nextcloud's powerful file storage capabilities to provide a robust and secure file management system. By building on top of Nextcloud's proven infrastructure, Open Register inherits all the benefits of Nextcloud's file handling including:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Secure file storage and encryption"}),"\n",(0,s.jsx)(i.li,{children:"File versioning and history"}),"\n",(0,s.jsx)(i.li,{children:"Collaborative features like sharing and commenting"}),"\n",(0,s.jsx)(i.li,{children:"Preview generation for supported file types"}),"\n",(0,s.jsx)(i.li,{children:"Automated virus scanning"}),"\n",(0,s.jsx)(i.li,{children:"Flexible storage backend support"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(i.p,{children:"When a register is created in Open Register, a share is also automatically created in Nextcloud. Then when a schema is created, a folder is created within that share, and when an object is created, a folder is created (using the UUID of the object) in the folder of the schema. This means that every object has a corresponding folder. Files present in that folder are assumed to be attached to the object. This gives a simple and intuitive system of coupling files to objects."}),"\n",(0,s.jsx)(i.p,{children:"Alternatively, users can also relate (existing) files to an object by using the Nextcloud file system and tagging the file 'object:[uuid]' where '[uuid]' is the UUID of the object. In neither case is there a relation between the file and a property in the object. The files are however available through the object API because file objects are returned in the object metadata under the files array."}),"\n",(0,s.jsx)(i.h2,{id:"file-object-structure",children:"File Object Structure"}),"\n",(0,s.jsx)(i.p,{children:"The file object contains the following properties:"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Property"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"id"}),(0,s.jsx)(i.td,{children:"integer"}),(0,s.jsx)(i.td,{children:"Unique identifier of the file in Nextcloud"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"path"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"Full path to the file in Nextcloud"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"title"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"Name of the file"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"accessUrl"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"URL to access the file via share link"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"downloadUrl"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"Direct download URL for the file"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"type"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"MIME type of the file"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"extension"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"File extension"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"size"}),(0,s.jsx)(i.td,{children:"integer"}),(0,s.jsx)(i.td,{children:"File size in bytes"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"hash"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"ETag hash for file versioning"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"published"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"ISO 8601 timestamp when file was first shared"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"modified"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"ISO 8601 timestamp of last modification"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"labels"}),(0,s.jsx)(i.td,{children:"array"}),(0,s.jsx)(i.td,{children:"Array of tags and key-value pairs"})]})]})]}),"\n",(0,s.jsx)(i.p,{children:"This hierarchical organization ensures files are properly categorized and easily accessible."}),"\n",(0,s.jsx)(i.h2,{id:"attaching-files-to-objects",children:"Attaching Files to Objects"}),"\n",(0,s.jsx)(i.p,{children:"Files can be attached to objects in several ways:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Schema-defined file properties: When a schema includes properties of type 'file', these are automatically handled during object creation or updates"}),"\n",(0,s.jsx)(i.li,{children:"Direct API attachment: Files can be added to an object after creation using the file attachment API endpoints"}),"\n",(0,s.jsx)(i.li,{children:"Base64 encoded content: Files can be included in object data as base64-encoded strings"}),"\n",(0,s.jsx)(i.li,{children:"URL references: External files can be referenced by URL and will be downloaded and stored locally"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"file-metadata-and-tagging",children:"File Metadata and Tagging"}),"\n",(0,s.jsx)(i.p,{children:"Each file attachment includes rich metadata:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Basic properties (name, size, type, extension)"}),"\n",(0,s.jsx)(i.li,{children:"Creation and modification timestamps"}),"\n",(0,s.jsx)(i.li,{children:"Access and download URLs"}),"\n",(0,s.jsx)(i.li,{children:"Checksum for integrity verification"}),"\n",(0,s.jsx)(i.li,{children:"Custom tags for categorization"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"tagging-system",children:"Tagging System"}),"\n",(0,s.jsx)(i.p,{children:"Files can be tagged with both simple labels and key-value pairs:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Tags with a colon (':') are treated as key-value pairs and can be used for advanced filtering and organization"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"version-control",children:"Version Control"}),"\n",(0,s.jsx)(i.p,{children:"The system maintains file versions by:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Tracking file modifications with timestamps"}),"\n",(0,s.jsx)(i.li,{children:"Preserving checksums to detect changes"}),"\n",(0,s.jsx)(i.li,{children:"Integrating with the object audit trail system"}),"\n",(0,s.jsx)(i.li,{children:"Supporting file restoration from previous versions"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"security-and-access-control",children:"Security and Access Control"}),"\n",(0,s.jsx)(i.p,{children:"File attachments inherit the security model of their parent objects:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Files are stored in NextCloud with appropriate permissions"}),"\n",(0,s.jsx)(i.li,{children:"Share links can be generated for controlled external access"}),"\n",(0,s.jsx)(i.li,{children:"Access is managed through the OpenRegister user and group system"}),"\n",(0,s.jsx)(i.li,{children:"Files are associated with the OpenRegister application user for consistent permissions"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"file-operations",children:"File Operations"}),"\n",(0,s.jsx)(i.p,{children:"The system supports the following operations on file attachments:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Retrieving Files"}),"\n",(0,s.jsx)(i.li,{children:"Updating Files"}),"\n",(0,s.jsx)(i.li,{children:"Deleting Files"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"file-preview-and-rendering",children:"File Preview and Rendering"}),"\n",(0,s.jsx)(i.p,{children:"The system leverages NextCloud's preview capabilities for supported file types:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Images are displayed as thumbnails"}),"\n",(0,s.jsx)(i.li,{children:"PDFs can be previewed in-browser"}),"\n",(0,s.jsx)(i.li,{children:"Office documents can be viewed with compatible apps"}),"\n",(0,s.jsx)(i.li,{children:"Preview URLs are generated for easy embedding"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"integration-with-object-lifecycle",children:"Integration with Object Lifecycle"}),"\n",(0,s.jsx)(i.p,{children:"File attachments are fully integrated with the object lifecycle:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"When objects are created, their file folders are automatically provisioned"}),"\n",(0,s.jsx)(i.li,{children:"When objects are updated, file references are maintained"}),"\n",(0,s.jsx)(i.li,{children:"When objects are deleted, associated files can be optionally preserved or removed"}),"\n",(0,s.jsx)(i.li,{children:"File operations are recorded in the object's audit trail"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,s.jsx)(i.p,{children:"The file attachment system is implemented through two main service classes:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"FileService: Handles low-level file operations, folder management, and NextCloud integration"}),"\n",(0,s.jsx)(i.li,{children:"ObjectService: Provides high-level methods for attaching, retrieving, and managing files in the context of objects"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"These services work together to provide a seamless file management experience within the OpenRegister application."})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);
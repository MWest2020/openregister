"use strict";(self.webpackChunkopen_catalogi_docs=self.webpackChunkopen_catalogi_docs||[]).push([[2347],{8362:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Features/object-storage","title":"Object Storage","description":"Open Register provides flexible storage options for objects through configurable data sources per register. This allows organizations to store their data where it makes the most sense while maintaining a unified interface.","source":"@site/docs/Features/object-storage.md","sourceDirName":"Features","slug":"/Features/object-storage","permalink":"/docs/Features/object-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/conductionnl/openregister/tree/main/website/docs/Features/object-storage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Object Relations","permalink":"/docs/Features/object-relations"},"next":{"title":"Register Management","permalink":"/docs/Features/register-management"}}');var r=s(4848),t=s(8453);const l={},a="Object Storage",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Storage Options",id:"storage-options",level:2},{value:"Default Storage",id:"default-storage",level:3},{value:"External Databases",id:"external-databases",level:3},{value:"Object Stores",id:"object-stores",level:3},{value:"Search Engines",id:"search-engines",level:3},{value:"External APIs",id:"external-apis",level:3},{value:"Key Benefits",id:"key-benefits",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Related Features",id:"related-features",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"object-storage",children:"Object Storage"})}),"\n",(0,r.jsx)(n.p,{children:"Open Register provides flexible storage options for objects through configurable data sources per register. This allows organizations to store their data where it makes the most sense while maintaining a unified interface."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The storage system supports:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default blob storage in Nextcloud"}),"\n",(0,r.jsx)(n.li,{children:"External database connections"}),"\n",(0,r.jsx)(n.li,{children:"Object storage systems"}),"\n",(0,r.jsx)(n.li,{children:"Elasticsearch backends"}),"\n",(0,r.jsx)(n.li,{children:"External API integrations"}),"\n",(0,r.jsx)(n.li,{children:"Multiple sources per installation"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"storage-options",children:"Storage Options"}),"\n",(0,r.jsx)(n.h3,{id:"default-storage",children:"Default Storage"}),"\n",(0,r.jsx)(n.p,{children:"When no source is defined, objects are stored as JSON blobs in the Nextcloud database, providing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple setup"}),"\n",(0,r.jsx)(n.li,{children:"Built-in backup"}),"\n",(0,r.jsx)(n.li,{children:"Direct integration"}),"\n",(0,r.jsx)(n.li,{children:"No external dependencies"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"external-databases",children:"External Databases"}),"\n",(0,r.jsx)(n.p,{children:"Connect registers to external databases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"MySQL/MariaDB"}),"\n",(0,r.jsx)(n.li,{children:"PostgreSQL"}),"\n",(0,r.jsx)(n.li,{children:"MongoDB"}),"\n",(0,r.jsx)(n.li,{children:"Custom database adapters"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"object-stores",children:"Object Stores"}),"\n",(0,r.jsx)(n.p,{children:"Store objects in dedicated object storage:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"S3-compatible storage"}),"\n",(0,r.jsx)(n.li,{children:"MinIO"}),"\n",(0,r.jsx)(n.li,{children:"Azure Blob Storage"}),"\n",(0,r.jsx)(n.li,{children:"Custom object store adapters"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"search-engines",children:"Search Engines"}),"\n",(0,r.jsx)(n.p,{children:"Use search engines as primary storage:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Elasticsearch"}),"\n",(0,r.jsx)(n.li,{children:"OpenSearch"}),"\n",(0,r.jsx)(n.li,{children:"Custom search engine adapters"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"external-apis",children:"External APIs"}),"\n",(0,r.jsx)(n.p,{children:"Connect to external systems:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"REST APIs"}),"\n",(0,r.jsx)(n.li,{children:"GraphQL endpoints"}),"\n",(0,r.jsx)(n.li,{children:"Custom API adapters"}),"\n",(0,r.jsx)(n.li,{children:"Other Open Register instances"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Flexibility"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose optimal storage per register"}),"\n",(0,r.jsx)(n.li,{children:"Mix different storage types"}),"\n",(0,r.jsx)(n.li,{children:"Adapt to existing infrastructure"}),"\n",(0,r.jsx)(n.li,{children:"Scale storage independently"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Integration"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Connect to existing systems"}),"\n",(0,r.jsx)(n.li,{children:"Maintain data where it belongs"}),"\n",(0,r.jsx)(n.li,{children:"Unified access interface"}),"\n",(0,r.jsx)(n.li,{children:"Transparent to users"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Optimize for specific use cases"}),"\n",(0,r.jsx)(n.li,{children:"Scale according to needs"}),"\n",(0,r.jsx)(n.li,{children:"Use specialized systems"}),"\n",(0,r.jsx)(n.li,{children:"Maintain efficiency"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Migration"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Easy data migration"}),"\n",(0,r.jsx)(n.li,{children:"Change sources without impact"}),"\n",(0,r.jsx)(n.li,{children:"Test different storage options"}),"\n",(0,r.jsx)(n.li,{children:"Gradual transitions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Sources are configured at the register level, allowing different registers to use different storage backends while maintaining a consistent interface for users and applications."}),"\n",(0,r.jsx)(n.h2,{id:"related-features",children:"Related Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/Features/register-management",children:"Register Management"})," - Configure register storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/Features/schema-validation",children:"Schema Validation"})," - Validate across storage types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/Features/content-search",children:"Content Search"})," - Search across storage types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/Features/access-control",children:"Access Control"})," - Unified permissions across sources"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);